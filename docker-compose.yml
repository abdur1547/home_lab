---
services:

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    restart: always
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - ./prowlarr/configs:/config
    ports:
      - 9696:9696
  
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    restart: always
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - ./radarr/configs:/config
      - ./downloads:/downloads
    ports:
      - 7878:7878
  
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    restart: always
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - ./sonarr/configs:/config
      - ./downloads:/downloads
    ports:
      - 8989:8989

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    restart: always
    ports:
      - 8080:8080
      - 6881:6881
      - 6881:6881/udp
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - WEBUI_PORT=8080
      - TORRENTING_PORT=6881
    volumes:
      - ./qbittorrent/configs:/config
      - ./qbittorrent/webui:/webui
      - ./downloads:/data
  
  jellyfin:
    image: jellyfin/jellyfin:latest
    container_name: jellyfin
    restart: always
    user: 1000:1000
    network_mode: "bridge"
    ports:
      - 8096:8096
    volumes:
      - ./jellyfin/configs:/config
      - ./jellyfin/cache:/cache
      - ./downloads:/media
  
  filebrowser:
    image: filebrowser/filebrowser:s6
    container_name: filebrowser
    restart: always
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - ./downloads:/srv
      - ./filebrowser/filebrowser.db:/database/filebrowser.db
      - ./filebrowser/settings.json:/config/settings.json
    ports:
      - 9090:80
  
  # pihole:
  #   container_name: pihole
  #   image: pihole/pihole:latest
  #   # For DHCP it is recommended to remove these ports and instead add: network_mode: "host"
  #   ports:
  #     - "53:53/tcp"
  #     - "53:53/udp"
  #     - "67:67/udp" # Only required if you are using Pi-hole as your DHCP server
  #     - "80:80/tcp"
  #   environment:
  #     TZ: Etc/UTC
  #     WEBPASSWORD: 'password'
  #   # Volumes store your data between container upgrades
  #   volumes:
  #     - './etc-pihole:/etc/pihole'
  #     - './etc-dnsmasq.d:/etc/dnsmasq.d'
  #   #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
  #   cap_add:
  #     - NET_ADMIN # Required if you are using Pi-hole as your DHCP server, else not needed
  #   restart: always
  
  nginx:
    image: jc21/nginx-proxy-manager:latest
    container_name: nginx
    restart: always
    ports:
      - 80:80
      - 81:81
      - 443:443
    volumes:
      - ./nginx/data:/data
      - ./nginx/letsencrypt:/etc/letsencrypt
  
  watchtower:
    image: containrrr/watchtower
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock